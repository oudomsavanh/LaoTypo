/**
 * Firebase Setup Script for Node.js
 * 
 * Run this script to import words to Firebase from your laptop
 * 
 * Prerequisites:
 * 1. Install Node.js: https://nodejs.org/
 * 2. Install Firebase Admin SDK: npm install firebase-admin
 * 3. Get your Firebase service account key
 */

const admin = require('firebase-admin');

// Initialize Firebase Admin SDK
// You need to download your service account key from Firebase Console
// Go to Project Settings > Service Accounts > Generate New Private Key
const serviceAccount = require('./path-to-your-service-account-key.json'); // Replace with actual path

admin.initializeApp({
    credential: admin.credential.cert(serviceAccount),
    projectId: 'laotypo-phase1'
});

const db = admin.firestore();

// Sample game words data
const gameWords = [
    // Easy words (difficulty: 1)
    { context: '‡∫™‡∫∞‡∫ö‡∫≤‡∫ç‡∫î‡∫µ', correct: '‡∫™‡∫∞‡∫ö‡∫≤‡∫ç‡∫î‡∫µ', incorrect: '‡∫™‡∫∞‡∫ö‡∫≤‡∫ç‡∫î‡∫µ‡∫µ', difficulty: 1, order: 1 },
    { context: '‡∫Ç‡∫≠‡∫ö‡ªÉ‡∫à', correct: '‡∫Ç‡∫≠‡∫ö‡ªÉ‡∫à', incorrect: '‡∫Ç‡∫≠‡∫ö‡∫à‡∫±‡∫ç', difficulty: 1, order: 2 },
    { context: '‡∫•‡∫≤‡∫ß', correct: '‡∫•‡∫≤‡∫ß', incorrect: '‡∫•‡∫≤‡∫ç', difficulty: 1, order: 3 },
    { context: '‡∫™‡∫ß‡∫ç‡∫á‡∫≤‡∫°', correct: '‡∫™‡∫ß‡∫ç‡∫á‡∫≤‡∫°', incorrect: '‡∫™‡∫ß‡∫ç‡∫á‡∫≤‡∫°‡∫°', difficulty: 1, order: 4 },
    { context: '‡∫î‡∫µ', correct: '‡∫î‡∫µ', incorrect: '‡∫î‡∫µ‡∫µ', difficulty: 1, order: 5 },
    { context: '‡∫ö‡ªç‡ªà‡∫î‡∫µ', correct: '‡∫ö‡ªç‡ªà‡∫î‡∫µ', incorrect: '‡∫ö‡ªç‡∫î‡∫µ', difficulty: 1, order: 6 },
    { context: '‡∫Ç‡ªç‡∫≠‡∫∞‡ªÑ‡∫û', correct: '‡∫Ç‡ªç‡∫≠‡∫∞‡ªÑ‡∫û', incorrect: '‡∫Ç‡ªç‡∫≠‡∫∞‡ªÑ‡∫û‡∫û', difficulty: 1, order: 7 },
    { context: '‡∫ç‡∫¥‡∫ô‡∫î‡∫µ', correct: '‡∫ç‡∫¥‡∫ô‡∫î‡∫µ', incorrect: '‡∫ç‡∫¥‡∫ô‡∫î‡∫µ‡∫µ', difficulty: 1, order: 8 },
    { context: '‡∫Ñ‡∫≠‡∫ö‡∫Ñ‡∫ª‡∫ß', correct: '‡∫Ñ‡∫≠‡∫ö‡∫Ñ‡∫ª‡∫ß', incorrect: '‡∫Ñ‡∫≠‡∫ö‡∫Ñ‡∫ª‡∫ß‡∫ß', difficulty: 1, order: 9 },
    { context: '‡ªÄ‡∫Æ‡∫∑‡∫≠‡∫ô', correct: '‡ªÄ‡∫Æ‡∫∑‡∫≠‡∫ô', incorrect: '‡ªÄ‡∫Æ‡∫∑‡∫≠‡∫ô‡∫ô', difficulty: 1, order: 10 },
    { context: '‡∫≠‡∫≤‡∫´‡∫≤‡∫ô', correct: '‡∫≠‡∫≤‡∫´‡∫≤‡∫ô', incorrect: '‡∫≠‡∫≤‡∫´‡∫≤‡∫ô‡∫ô', difficulty: 1, order: 11 },
    { context: '‡∫ô‡ªâ‡∫≥', correct: '‡∫ô‡ªâ‡∫≥', incorrect: '‡∫ô‡∫≥', difficulty: 1, order: 12 },
    { context: '‡∫≠‡∫≤‡∫Å‡∫≤‡∫î', correct: '‡∫≠‡∫≤‡∫Å‡∫≤‡∫î', incorrect: '‡∫≠‡∫≤‡∫Å‡∫≤‡∫î‡∫î', difficulty: 1, order: 13 },
    { context: '‡∫î‡∫≠‡∫Å‡ªÑ‡∫°‡ªâ', correct: '‡∫î‡∫≠‡∫Å‡ªÑ‡∫°‡ªâ', incorrect: '‡∫î‡∫≠‡∫Å‡ªÑ‡∫°‡ªâ‡ªâ', difficulty: 1, order: 14 },
    { context: '‡∫™‡∫±‡∫î', correct: '‡∫™‡∫±‡∫î', incorrect: '‡∫™‡∫±‡∫î‡∫î', difficulty: 1, order: 15 },
    
    // Medium words (difficulty: 2)
    { context: "‡∫Ñ‡∫ª‡∫ô‡∫ó‡∫µ‡ªà‡∫Ç‡∫±‡∫ö‡∫•‡∫ª‡∫î", correct: "‡∫Ñ‡∫ª‡∫ô‡∫Ç‡∫±‡∫ö", incorrect: "‡∫Ñ‡∫ª‡∫ô‡∫Ç‡∫±‡∫ö‡∫£‡ªå", difficulty: 2, order: 16 },
    { context: "‡∫ú‡∫π‡ªâ‡∫ó‡∫µ‡ªà‡∫°‡∫±‡∫Å‡ªÄ‡∫ß‡∫ª‡ªâ‡∫≤", correct: "‡∫Ñ‡∫ª‡∫ô‡∫Ç‡∫µ‡ªâ‡∫Ñ‡∫∏‡∫ç", incorrect: "‡∫Ñ‡∫ª‡∫ô‡∫Ç‡∫µ‡∫Ñ‡∫∏‡ªâ‡∫ç", difficulty: 2, order: 17 },
    { context: "‡∫ú‡∫π‡ªâ‡∫ó‡∫µ‡ªà‡∫°‡∫±‡∫Å‡∫´‡∫º‡∫≠‡∫Å‡∫•‡∫ß‡∫á", correct: "‡∫Ñ‡∫ª‡∫ô‡∫Ç‡∫µ‡ªâ‡∫ï‡∫ª‡∫ß‡∫∞", incorrect: "‡∫Ñ‡∫ª‡∫ô‡∫Ç‡∫µ‡∫ï‡∫ª‡ªâ‡∫ß‡∫∞", difficulty: 2, order: 18 },
    { context: '‡∫û‡∫≤‡∫™‡∫≤‡∫•‡∫≤‡∫ß', correct: '‡∫û‡∫≤‡∫™‡∫≤‡∫•‡∫≤‡∫ß', incorrect: '‡∫û‡∫≤‡∫™‡∫≤‡∫•‡∫≤‡∫ç', difficulty: 2, order: 19 },
    { context: '‡ªÇ‡∫Æ‡∫á‡∫Æ‡∫Ω‡∫ô', correct: '‡ªÇ‡∫Æ‡∫á‡∫Æ‡∫Ω‡∫ô', incorrect: '‡ªÇ‡∫Æ‡∫á‡∫Æ‡∫¥‡∫Ω‡∫ô', difficulty: 2, order: 20 },
    { context: '‡∫õ‡∫∞‡ªÄ‡∫ó‡∫î‡∫•‡∫≤‡∫ß', correct: '‡∫õ‡∫∞‡ªÄ‡∫ó‡∫î‡∫•‡∫≤‡∫ß', incorrect: '‡∫õ‡∫∞‡ªÄ‡∫ó‡∫î‡∫•‡∫≤‡∫ç', difficulty: 2, order: 21 },
    { context: '‡∫ß‡∫±‡∫î‡∫ó‡∫∞‡∫ô‡∫∞‡∫ó‡∫≥', correct: '‡∫ß‡∫±‡∫î‡∫ó‡∫∞‡∫ô‡∫∞‡∫ó‡∫≥', incorrect: '‡∫ß‡∫±‡∫î‡∫ó‡∫∞‡∫ô‡∫∞‡∫ó‡∫≥‡∫≥', difficulty: 2, order: 22 },
    { context: '‡∫õ‡∫∞‡∫´‡∫ß‡∫±‡∫î‡∫™‡∫≤‡∫î', correct: '‡∫õ‡∫∞‡∫´‡∫ß‡∫±‡∫î‡∫™‡∫≤‡∫î', incorrect: '‡∫õ‡∫∞‡∫´‡∫ß‡∫±‡∫î‡∫™‡∫≤‡∫î‡∫î', difficulty: 2, order: 23 },
    { context: '‡∫Å‡∫≤‡∫ô‡∫™‡∫∂‡∫Å‡∫™‡∫≤', correct: '‡∫Å‡∫≤‡∫ô‡∫™‡∫∂‡∫Å‡∫™‡∫≤', incorrect: '‡∫Å‡∫≤‡∫ô‡∫™‡∫∂‡∫Å‡∫™‡∫≤‡∫∞', difficulty: 2, order: 24 },
    { context: '‡∫Å‡∫≤‡∫ô‡ªÅ‡∫û‡∫î', correct: '‡∫Å‡∫≤‡∫ô‡ªÅ‡∫û‡∫î', incorrect: '‡∫Å‡∫≤‡∫ô‡ªÅ‡∫û‡∫î‡∫î', difficulty: 2, order: 25 },
    { context: '‡∫Å‡∫≤‡∫ô‡∫ó‡ªà‡∫≠‡∫á‡∫ó‡ªà‡∫Ω‡∫ß', correct: '‡∫Å‡∫≤‡∫ô‡∫ó‡ªà‡∫≠‡∫á‡∫ó‡ªà‡∫Ω‡∫ß', incorrect: '‡∫Å‡∫≤‡∫ô‡∫ó‡ªà‡∫≠‡∫á‡∫ó‡ªà‡∫Ω‡∫ß‡∫ß', difficulty: 2, order: 26 },
    { context: '‡∫Å‡∫≤‡∫ô‡∫Ñ‡ªâ‡∫≤', correct: '‡∫Å‡∫≤‡∫ô‡∫Ñ‡ªâ‡∫≤', incorrect: '‡∫Å‡∫≤‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫∞', difficulty: 2, order: 27 },
    { context: '‡∫Å‡∫≤‡∫ô‡∫Å‡∫∞‡∫™‡∫¥‡∫Å‡∫≥', correct: '‡∫Å‡∫≤‡∫ô‡∫Å‡∫∞‡∫™‡∫¥‡∫Å‡∫≥', incorrect: '‡∫Å‡∫≤‡∫ô‡∫Å‡∫∞‡∫™‡∫¥‡∫Å‡∫≥‡∫≥', difficulty: 2, order: 28 },
    { context: '‡∫Å‡∫≤‡∫ô‡∫≠‡∫∏‡∫î‡∫™‡∫≤‡∫´‡∫∞‡∫Å‡∫≥', correct: '‡∫Å‡∫≤‡∫ô‡∫≠‡∫∏‡∫î‡∫™‡∫≤‡∫´‡∫∞‡∫Å‡∫≥', incorrect: '‡∫Å‡∫≤‡∫ô‡∫≠‡∫∏‡∫î‡∫™‡∫≤‡∫´‡∫∞‡∫Å‡∫≥‡∫≥', difficulty: 2, order: 29 },
    
    // Hard words (difficulty: 3)
    { context: '‡∫Ñ‡∫≠‡∫°‡∫û‡∫¥‡∫ß‡ªÄ‡∫ï‡∫µ', correct: '‡∫Ñ‡∫≠‡∫°‡∫û‡∫¥‡∫ß‡ªÄ‡∫ï‡∫µ', incorrect: '‡∫Ñ‡∫≠‡∫°‡∫û‡∫¥‡∫ç‡ªÄ‡∫ï‡∫µ', difficulty: 3, order: 30 },
    { context: '‡∫ß‡∫¥‡∫ó‡∫∞‡∫ç‡∫≤‡∫™‡∫≤‡∫î', correct: '‡∫ß‡∫¥‡∫ó‡∫∞‡∫ç‡∫≤‡∫™‡∫≤‡∫î', incorrect: '‡∫ß‡∫¥‡∫ó‡∫∞‡∫ç‡∫≤‡∫™‡∫≤‡∫ç', difficulty: 3, order: 31 },
    { context: '‡ªÄ‡∫ï‡∫±‡∫Å‡ªÇ‡∫ô‡ªÇ‡∫•‡∫ä‡∫µ', correct: '‡ªÄ‡∫ï‡∫±‡∫Å‡ªÇ‡∫ô‡ªÇ‡∫•‡∫ä‡∫µ', incorrect: '‡ªÄ‡∫ï‡∫±‡∫Å‡ªÇ‡∫ô‡ªÇ‡∫•‡∫ä‡∫¥', difficulty: 3, order: 32 },
    { context: '‡∫Å‡∫≤‡∫ô‡∫û‡∫±‡∫î‡∫ó‡∫∞‡∫ô‡∫≤', correct: '‡∫Å‡∫≤‡∫ô‡∫û‡∫±‡∫î‡∫ó‡∫∞‡∫ô‡∫≤', incorrect: '‡∫Å‡∫≤‡∫ô‡∫û‡∫±‡∫î‡∫ó‡∫∞‡∫ô‡∫≤‡∫∞', difficulty: 3, order: 33 },
    { context: '‡∫Å‡∫≤‡∫ô‡∫ß‡∫¥‡ªÑ‡∫à', correct: '‡∫Å‡∫≤‡∫ô‡∫ß‡∫¥‡ªÑ‡∫à', incorrect: '‡∫Å‡∫≤‡∫ô‡∫ß‡∫¥‡ªÑ‡∫à‡∫à', difficulty: 3, order: 34 },
    { context: '‡∫Å‡∫≤‡∫ô‡∫õ‡∫∞‡∫î‡∫¥‡∫î‡∫™‡ªâ‡∫≤‡∫á', correct: '‡∫Å‡∫≤‡∫ô‡∫õ‡∫∞‡∫î‡∫¥‡∫î‡∫™‡ªâ‡∫≤‡∫á', incorrect: '‡∫Å‡∫≤‡∫ô‡∫õ‡∫∞‡∫î‡∫¥‡∫î‡∫™‡ªâ‡∫≤‡∫á‡∫á', difficulty: 3, order: 35 },
    { context: '‡∫Å‡∫≤‡∫ô‡∫õ‡∫∞‡∫ï‡∫¥‡∫ö‡∫±‡∫î', correct: '‡∫Å‡∫≤‡∫ô‡∫õ‡∫∞‡∫ï‡∫¥‡∫ö‡∫±‡∫î', incorrect: '‡∫Å‡∫≤‡∫ô‡∫õ‡∫∞‡∫ï‡∫¥‡∫ö‡∫±‡∫î‡∫î', difficulty: 3, order: 36 },
    { context: '‡∫Å‡∫≤‡∫ô‡∫õ‡∫∞‡∫™‡∫ª‡∫ö‡∫ú‡∫ª‡∫ô‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î', correct: '‡∫Å‡∫≤‡∫ô‡∫õ‡∫∞‡∫™‡∫ª‡∫ö‡∫ú‡∫ª‡∫ô‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î', incorrect: '‡∫Å‡∫≤‡∫ô‡∫õ‡∫∞‡∫™‡∫ª‡∫ö‡∫ú‡∫ª‡∫ô‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î‡∫î', difficulty: 3, order: 37 },
    { context: '‡∫Å‡∫≤‡∫ô‡∫õ‡∫∞‡∫™‡∫ª‡∫°‡∫õ‡∫∞‡∫™‡∫≤‡∫ô', correct: '‡∫Å‡∫≤‡∫ô‡∫õ‡∫∞‡∫™‡∫ª‡∫°‡∫õ‡∫∞‡∫™‡∫≤‡∫ô', incorrect: '‡∫Å‡∫≤‡∫ô‡∫õ‡∫∞‡∫™‡∫ª‡∫°‡∫õ‡∫∞‡∫™‡∫≤‡∫ô‡∫ô', difficulty: 3, order: 38 },
    { context: '‡∫Å‡∫≤‡∫ô‡∫õ‡∫∞‡∫ï‡∫¥‡∫ö‡∫±‡∫î‡∫ï‡∫≤‡∫°', correct: '‡∫Å‡∫≤‡∫ô‡∫õ‡∫∞‡∫ï‡∫¥‡∫ö‡∫±‡∫î‡∫ï‡∫≤‡∫°', incorrect: '‡∫Å‡∫≤‡∫ô‡∫õ‡∫∞‡∫ï‡∫¥‡∫ö‡∫±‡∫î‡∫ï‡∫≤‡∫°‡∫°', difficulty: 3, order: 39 }
];

async function importWords() {
    try {
        console.log('üî• Starting Firebase import...');
        
        const batch = db.batch();
        const wordsRef = db.collection('gameWords');
        
        // Add each word to the batch
        gameWords.forEach(word => {
            const docRef = wordsRef.doc();
            batch.set(docRef, word);
        });
        
        // Commit the batch
        await batch.commit();
        
        console.log('‚úÖ Successfully imported', gameWords.length, 'words to Firebase!');
        console.log('üéÆ Your game should now load words from Firebase.');
        
    } catch (error) {
        console.error('‚ùå Error importing words:', error);
    }
}

async function checkData() {
    try {
        console.log('üîç Checking Firebase data...');
        
        const snapshot = await db.collection('gameWords').get();
        console.log('üìö Total words in Firebase:', snapshot.size);
        
        // Count by difficulty
        const stats = { easy: 0, medium: 0, hard: 0 };
        snapshot.forEach(doc => {
            const data = doc.data();
            if (data.difficulty === 1) stats.easy++;
            else if (data.difficulty === 2) stats.medium++;
            else if (data.difficulty === 3) stats.hard++;
        });
        
        console.log('üìä Word statistics:', stats);
        
    } catch (error) {
        console.error('‚ùå Error checking data:', error);
    }
}

// Main execution
async function main() {
    const command = process.argv[2];
    
    if (command === 'import') {
        await importWords();
    } else if (command === 'check') {
        await checkData();
    } else {
        console.log('Usage:');
        console.log('  node firebase-setup-node.js import  - Import words to Firebase');
        console.log('  node firebase-setup-node.js check   - Check current data');
    }
    
    process.exit(0);
}

main();